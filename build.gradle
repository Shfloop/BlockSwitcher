plugins {
    id 'java'
    id "io.github.pacifistmc.forgix" version "1.2.9"
    id "cosmicloom" apply(false)
    id "jigsaw" apply(false)
    id "com.github.johnrengelman.shadow" apply(false)
}

forgix {
    group = "${group}"
    mergedJarName = "${mod_name}-${project.version}.jar"
    outputDir = "build/libs"

    quilt {
        projectName = "quilt"
        jarLocation = "build/libs/quilt-${project.version}.jar"
    }

    custom {
        projectName = "puzzle"
        jarLocation = "build/libs/puzzle-${project.version}-merged-bundle.jar"
    }
}

subprojects {
    apply plugin: 'java'

    repositories {
        maven {
            name "JitPack"
            url "https://jitpack.io"
        }
    }

    processResources {
        // Locations of where to inject the properties
        def resourceTargets = [ 'puzzle.mod.json', 'quilt.mod.json', '*.mixins.json' ]

        // Left item is the name in the target, right is the varuable name
        def replaceProperties = [
                "mod_version": version,
                "group": project.group,
                "cosmic_reach_version": cosmic_reach_version,
                "mod_name": mod_name,
                "mod_developer": mod_developer,
                "mod_id": mod_id,
                "description": project.description,
                "cosmic_quilt_version": cosmic_quilt_version,
                "puzzle_loader_version": puzzle_loader_version
        ]


        inputs.properties replaceProperties
        replaceProperties.put "project", project
        filesMatching(resourceTargets) {
            expand replaceProperties
        }
    }
}

tasks.register('buildAll') {
    group = "ModMixer"

    dependsOn rootProject.project(':quilt').tasks.build
    dependsOn rootProject.project(':puzzle').tasks.buildMergedBundleJar
    finalizedBy rootProject.tasks.mergeJars
}

tasks.register('cleanAll') {
    group = "ModMixer"

    dependsOn rootProject.project(':quilt').tasks.clean
    dependsOn rootProject.project(':puzzle').tasks.clean
    dependsOn rootProject.tasks.clean
}
